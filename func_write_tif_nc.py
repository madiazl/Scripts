# Autogenerated with SMOP version 
# main.py func_indicator_11_FUTURE_SCENARIOS.m
import numpy as np
from netcdf_funcs import *
import time

def func_write_tif_nc (filename, x, y, time_list,RP, metadata_file,metadata_var,inun_index,out_list):
    time1 = time.time()
    prepare_nc(filename, x, y, time_list,RP, metadata_file)
    append_nc(filename, 'Water', fill_value=-9999, metadata=metadata_var) #here need to be depending on the indicator 3, 11 or 8

    a = nc.Dataset(filename, 'a')
    print('Writing variable to {:s}'.format(filename))
    var = a.variables['Water']
    var.set_auto_maskandscale(False)

    #print i_RP, np.nansum(out_list), inun_index
    var_written = 'NA Array'

    #out_lis=np.flipud(out_lis[:,:]) # TAKE CARE WITH UP SIDE DOWN matrix

    print('prob var')
    var[:,:] = out_list [:,:]

    print var[:][:], out_list
    print 'asasnext'
    print np.max(var[:][:])
    #var[inun_index[0]][inun_index[1]] = out_list  debbug of netCF4
    time2 = time.time()
    a.sync()
    a.close()
    var_written = 'Raster with risk assessment results'
    return (var_written);
